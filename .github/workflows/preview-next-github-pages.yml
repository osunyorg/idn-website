# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy next to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - next
    paths:
      - "package.json"
      - "pagefind.yml"
      - "yarn.lock"
      - ".gitmodules"

      - ".github/workflows/preview-next-github-pages.yml"
      - ".github/lychee.**"

      - "assets/**"
      - "config/**"
      - "content/**"
      - "data/**"
      - "i18n/**"
      - "static/**"
      - "themes/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

env:
  BASE_URL: https://next.degrowth.net

jobs:
  build:
    name: Build Hugo page
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.finder.outputs.pr }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Workaround for self-hosted runners, e.g. nektos/act:
      # https://github.com/actions/setup-node/issues/182
      # https://github.com/yarnpkg/yarn/releases
      - name: Install yarn
        run: |-
          curl -fsSL --create-dirs -o $HOME/bin/yarn \
          https://github.com/yarnpkg/yarn/releases/download/v1.22.20/yarn-1.22.20.js
          chmod +x $HOME/bin/yarn
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Node Installation
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Hugo Installation
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "latest"
          extended: true

      - name: Dependencies Installation
        run: yarn install

      - name: Build the site
        env:
          HUGO_BASEURL: ${{ env.BASE_URL }}
        run: yarn osuny build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: preview-build
          path: ./public

      - name: Find merged Pull Request
        uses: jwalton/gh-find-current-pr@v1
        id: finder
        with:
          state: closed

  checkExternalLinks:
    name: Check external links
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: preview-build
          path: public
      - name: Untar downloaded files
        run: |
          tar xf public/artifact.tar -C public/
          rm public/artifact.tar
      - name: Restore lychee cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: .lycheecache
          key: cache-lychee-external-${{ github.sha }}
          restore-keys: cache-lychee-external-
      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v1
        env:
          CONFIG: .github/lychee.external.toml
          INPUT: public
        with:
          args: -c ${{ env.CONFIG }} --base ${{ env.BASE_URL }} --no-progress --include-fragments ${{ env.INPUT }}
          format: markdown
          output: .lychee.report.external.md
          jobSummary: true
      - name: Comment link checking results to merged PR
        if: ${{ needs.build.outputs.pr_number }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: external
          number: ${{ needs.build.outputs.pr_number }}
          path: .lychee.report.external.md
          hide_and_recreate: true
          hide_classify: "OUTDATED"
      - name: Save lychee cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: .lycheecache
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}

  # Deploy to GitHub Pages
  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: preview-build

  checkInternalLinks:
    name: Check internal links
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: preview-build
          path: public
      - name: Untar downloaded files
        run: |
          tar xf public/artifact.tar -C public/
          rm public/artifact.tar
      - name: Restore lychee cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: .lycheecache
          key: cache-lychee-internal-${{ github.sha }}
          restore-keys: cache-lychee-internal-
      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v1
        env:
          CONFIG: .github/lychee.internal.toml
          INPUT: public
        with:
          args: -c ${{ env.CONFIG }} --base ${{ env.BASE_URL }} --no-progress --include-fragments ${{ env.INPUT }}
          format: markdown
          output: .lychee.report.internal.md
          jobSummary: true
      - name: Comment link checking results to merged PR
        if: ${{ needs.build.outputs.pr_number }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: internal
          number: ${{ needs.build.outputs.pr_number }}
          path: .lychee.report.internal.md
          hide_and_recreate: true
          hide_classify: "OUTDATED"
      - name: Save lychee cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: .lycheecache
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
